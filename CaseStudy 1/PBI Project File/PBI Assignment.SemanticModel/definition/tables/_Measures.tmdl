table _Measures
	lineageTag: 317f26d6-839e-4729-9fb5-0b5cc2b1204b

	measure 'Total Cumulative Return' =
			
			CALCULATE (
			    SUM ( FactProductPerformance[Value] ),
			    FactProductPerformance[Metric Type] = "Cumulative Return"
			)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: c0610c9a-1ced-417d-92d4-c78d9b6568cd

	measure 'Total Monthly Return' =
			
			CALCULATE (
			    SUM ( FactProductPerformance[Value] ),
			    FILTER (
			        FactProductPerformance,
			        FactProductPerformance[Metric Type] = "Monthly Return"
			    )
			)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 52ea7f67-84a0-4eec-a619-29f04dd30e99

	measure 'Total AUM' =
			
			CALCULATE (
			    SUM ( FactProductPerformance[Value] ),
			    FactProductPerformance[Metric Type] = "AUM"
			)
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		lineageTag: 9844260f-9f4b-4120-b22e-e5e4f616a6c2

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Cumulative Return' =
			
			VAR MaxActualDateInVisual =
			    MAX ( DimDate[Date] )
			VAR MaxSOMForIteration =
			    DATE ( YEAR ( MaxActualDateInVisual ), MONTH ( MaxActualDateInVisual ), 1 )
			VAR RelevantStartOfMonthDates =
			    FILTER (
			        SUMMARIZE ( ALLSELECTED ( DimDate ), DimDate[StartOfMonthDate] ),
			        DimDate[StartOfMonthDate] <= MaxSOMForIteration
			    )
			RETURN
			    IF (
			        HASONEVALUE ( FactProductPerformance[Unified Product Name] ),
			        CALCULATE (
			            PRODUCTX (
			                RelevantStartOfMonthDates,
			                VAR CurrentIterationSOMDate = DimDate[StartOfMonthDate]
			                RETURN
			                    1
			                        + CALCULATE (
			                            SUM ( FactProductPerformance[Value] ),
			                            FILTER ( ALL ( DimDate ), DimDate[StartOfMonthDate] = CurrentIterationSOMDate ),
			                            FactProductPerformance[Metric Type] = "Monthly Return"
			                        )
			            ) - 1
			        )
			    )
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 4bf737a4-4e93-4f40-9c2b-1c09d5432465

	partition _Measures = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

